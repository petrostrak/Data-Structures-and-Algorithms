Interpolation Search

Linear Search finds the element in O(n) time, Jump Search takes O(√ n) time and Binary Search take O(Log n) time.
The Interpolation Search is an improvement over Binary Search for instances, where the values in a sorted array 
are uniformly distributed. Binary Search always goes to the middle element to check. On the other hand, interpolation 
search may go to different locations according to the value of the key being searched. For example, if the value of 
the key is closer to the last element, interpolation search is likely to start search toward the end side.

Step1: In a loop, calculate the value of “pos” using the probe position formula.

Step2: If it is a match, return the index of the item, and exit.

Step3: If the item is less than arr[pos], calculate the probe position of the left sub-array. Otherwise calculate the 
same in the right sub-array.

Step4: Repeat until a match is found or the sub-array reduces to zero.

Time Complexity: 

If elements are uniformly distributed, then O (log log n)). In worst case it can take upto O(n).
